<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="downloadFrequency" val="1.0"/>
    <a name="simulationFrequency" val="1.0"/>
    <boardmap boardname="BASYS3">
      <mc key="/Input_1" map="321,237"/>
      <mc key="/Input_10" map="78,323"/>
      <mc key="/Input_11" map="582,238"/>
      <mc key="/Input_12" map="536,272"/>
      <mc key="/Input_13" map="536,203"/>
      <mc key="/Input_14" map="536,235"/>
      <mc key="/Input_2" map="487,236"/>
      <mc key="/Input_3" map="117,323"/>
      <mc key="/Input_4" map="154,323"/>
      <mc key="/Input_5" map="192,323"/>
      <mc key="/Input_6" map="228,323"/>
      <mc key="/Input_7" map="268,323"/>
      <mc key="/Input_8" map="305,323"/>
      <mc key="/Input_9" map="341,323"/>
    </boardmap>
    <comp lib="0" loc="(1140,370)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_1"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(120,890)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_7"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(130,1060)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_9"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(130,1230)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_10"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(140,1390)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_13"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1490,310)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_1"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1490,340)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_2"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1490,370)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_3"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1490,400)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_4"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1500,1350)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_11"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1500,1380)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_12"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1500,1410)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_14"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1500,1440)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_15"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1510,440)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_4"/>
    </comp>
    <comp lib="0" loc="(1530,870)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_6"/>
      <a name="width" val="2"/>
    </comp>
    <comp lib="0" loc="(1540,610)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_5"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1550,1490)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_13"/>
    </comp>
    <comp lib="0" loc="(170,970)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_7"/>
    </comp>
    <comp lib="0" loc="(180,1140)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_10"/>
    </comp>
    <comp lib="0" loc="(180,1310)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_11"/>
    </comp>
    <comp lib="0" loc="(180,1470)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_12"/>
    </comp>
    <comp lib="0" loc="(2210,920)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_5"/>
    </comp>
    <comp lib="0" loc="(2230,1050)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_9"/>
    </comp>
    <comp lib="0" loc="(2240,1010)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_8"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(2400,1690)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_14"/>
    </comp>
    <comp lib="0" loc="(2490,790)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="radix" val="16"/>
      <a name="width" val="10"/>
    </comp>
    <comp lib="0" loc="(2750,1670)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_2"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(3580,2030)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_bus_2"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(3620,1850)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_bus_1"/>
      <a name="output" val="true"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(720,390)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_2"/>
    </comp>
    <comp lib="0" loc="(720,430)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_3"/>
    </comp>
    <comp lib="0" loc="(730,950)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_6"/>
    </comp>
    <comp lib="0" loc="(730,990)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_8"/>
    </comp>
    <comp lib="0" loc="(90,180)" name="Clock"/>
    <comp loc="(1120,370)" name="uc">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="uc_1"/>
    </comp>
    <comp loc="(1780,320)" name="transformator_suma">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="transformator_suma_1"/>
    </comp>
    <comp loc="(1780,610)" name="registru_incarcare_pin">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="registru_incarcare_pin_1"/>
    </comp>
    <comp loc="(1800,870)" name="demux_selectare_operatie">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="demux_selectare_operatie_1"/>
    </comp>
    <comp loc="(1830,1350)" name="transformator_suma">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="transformator_suma_2"/>
    </comp>
    <comp loc="(2000,1760)" name="memorie_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="memorie_bancnote_1"/>
    </comp>
    <comp loc="(2230,320)" name="comparator_suma">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="comparator_suma_1"/>
    </comp>
    <comp loc="(2360,1350)" name="sumator_sold">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="sumator_sold_1"/>
    </comp>
    <comp loc="(2360,520)" name="algoritm_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="algoritm_bancnote_1"/>
    </comp>
    <comp loc="(2470,820)" name="memorie_cont">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="memorie_cont_1"/>
    </comp>
    <comp loc="(2520,1870)" name="transformator_cifre">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="transformator_cifre_1"/>
    </comp>
    <comp loc="(2670,1650)" name="demux_alta_operatie">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="demux_alta_operatie_1"/>
    </comp>
    <comp loc="(2710,2030)" name="numarator_afisor">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="numarator_afisor_1"/>
    </comp>
    <comp loc="(2880,1160)" name="registru_suma">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="registru_suma_1"/>
    </comp>
    <comp loc="(2950,1850)" name="mux_afisor">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="mux_afisor_1"/>
    </comp>
    <comp loc="(3020,290)" name="scazator_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="scazator_bancnote_1"/>
    </comp>
    <comp loc="(3020,570)" name="scazator_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="scazator_bancnote_3"/>
    </comp>
    <comp loc="(3020,720)" name="scazator_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="scazator_bancnote_4"/>
    </comp>
    <comp loc="(3020,920)" name="scazator_sold">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="scazator_sold_1"/>
    </comp>
    <comp loc="(3030,420)" name="scazator_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="scazator_bancnote_2"/>
    </comp>
    <comp loc="(3540,1850)" name="decodificator_afisor">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="decodificator_afisor_1"/>
    </comp>
    <comp loc="(3540,2030)" name="mux_anod">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="mux_anod_1"/>
    </comp>
    <comp loc="(420,1060)" name="registru_actualizare_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="registru_actualizare_bancnote_2"/>
    </comp>
    <comp loc="(420,1230)" name="registru_actualizare_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="registru_actualizare_bancnote_3"/>
    </comp>
    <comp loc="(420,1390)" name="registru_actualizare_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="registru_actualizare_bancnote_4"/>
    </comp>
    <comp loc="(420,890)" name="registru_actualizare_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="registru_actualizare_bancnote_1"/>
    </comp>
    <comp loc="(870,1800)" name="sumator_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="sumator_bancnote_1"/>
    </comp>
    <comp loc="(870,1940)" name="sumator_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="sumator_bancnote_2"/>
    </comp>
    <comp loc="(870,2090)" name="sumator_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="sumator_bancnote_3"/>
    </comp>
    <comp loc="(870,2250)" name="sumator_bancnote">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="sumator_bancnote_4"/>
    </comp>
    <wire from="(10,1660)" to="(1250,1660)"/>
    <wire from="(10,950)" to="(10,1660)"/>
    <wire from="(10,950)" to="(200,950)"/>
    <wire from="(1010,1360)" to="(1010,2270)"/>
    <wire from="(1080,1340)" to="(1080,2280)"/>
    <wire from="(1080,2280)" to="(3290,2280)"/>
    <wire from="(110,1410)" to="(110,1710)"/>
    <wire from="(110,1410)" to="(200,1410)"/>
    <wire from="(110,1710)" to="(1700,1710)"/>
    <wire from="(1120,370)" to="(1140,370)"/>
    <wire from="(1120,390)" to="(1370,390)"/>
    <wire from="(1120,410)" to="(1170,410)"/>
    <wire from="(1120,430)" to="(1210,430)"/>
    <wire from="(1120,450)" to="(1250,450)"/>
    <wire from="(1120,470)" to="(1290,470)"/>
    <wire from="(1120,490)" to="(1340,490)"/>
    <wire from="(1120,510)" to="(1770,510)"/>
    <wire from="(1120,530)" to="(1840,530)"/>
    <wire from="(1120,550)" to="(2100,550)"/>
    <wire from="(1120,570)" to="(1140,570)"/>
    <wire from="(1120,590)" to="(1970,590)"/>
    <wire from="(1120,610)" to="(1420,610)"/>
    <wire from="(1120,630)" to="(1560,630)"/>
    <wire from="(1120,650)" to="(1260,650)"/>
    <wire from="(1120,670)" to="(1280,670)"/>
    <wire from="(1120,690)" to="(1450,690)"/>
    <wire from="(1120,710)" to="(1380,710)"/>
    <wire from="(1120,730)" to="(1340,730)"/>
    <wire from="(1120,750)" to="(1310,750)"/>
    <wire from="(1120,770)" to="(1260,770)"/>
    <wire from="(1120,790)" to="(1250,790)"/>
    <wire from="(1120,810)" to="(1230,810)"/>
    <wire from="(1120,830)" to="(1210,830)"/>
    <wire from="(1120,850)" to="(1190,850)"/>
    <wire from="(1140,1840)" to="(1420,1840)"/>
    <wire from="(1140,570)" to="(1140,1840)"/>
    <wire from="(1160,1060)" to="(1160,1170)"/>
    <wire from="(1160,1060)" to="(1950,1060)"/>
    <wire from="(1170,1820)" to="(1400,1820)"/>
    <wire from="(1170,410)" to="(1170,1820)"/>
    <wire from="(1190,850)" to="(1190,1600)"/>
    <wire from="(120,890)" to="(200,890)"/>
    <wire from="(1210,150)" to="(1210,430)"/>
    <wire from="(1210,150)" to="(2710,150)"/>
    <wire from="(1210,830)" to="(1210,1620)"/>
    <wire from="(1230,810)" to="(1230,1640)"/>
    <wire from="(1250,170)" to="(1250,450)"/>
    <wire from="(1250,170)" to="(2780,170)"/>
    <wire from="(1250,790)" to="(1250,1660)"/>
    <wire from="(1260,650)" to="(1260,660)"/>
    <wire from="(1260,660)" to="(1350,660)"/>
    <wire from="(1260,770)" to="(1260,2210)"/>
    <wire from="(1280,290)" to="(1280,650)"/>
    <wire from="(1280,650)" to="(1360,650)"/>
    <wire from="(1280,670)" to="(1280,990)"/>
    <wire from="(1280,990)" to="(1960,990)"/>
    <wire from="(1290,100)" to="(1290,470)"/>
    <wire from="(1290,100)" to="(2740,100)"/>
    <wire from="(1290,1250)" to="(1290,1460)"/>
    <wire from="(1290,1250)" to="(1910,1250)"/>
    <wire from="(1290,1460)" to="(1560,1460)"/>
    <wire from="(130,1060)" to="(200,1060)"/>
    <wire from="(130,1230)" to="(200,1230)"/>
    <wire from="(1310,750)" to="(1310,2060)"/>
    <wire from="(1340,730)" to="(1340,1900)"/>
    <wire from="(1340,80)" to="(1340,490)"/>
    <wire from="(1340,80)" to="(2650,80)"/>
    <wire from="(1350,660)" to="(1350,800)"/>
    <wire from="(1350,800)" to="(2120,800)"/>
    <wire from="(1360,650)" to="(1360,670)"/>
    <wire from="(1360,670)" to="(1500,670)"/>
    <wire from="(1370,1130)" to="(2440,1130)"/>
    <wire from="(1370,390)" to="(1370,1130)"/>
    <wire from="(1380,1800)" to="(1380,1860)"/>
    <wire from="(1380,1860)" to="(1440,1860)"/>
    <wire from="(1380,1880)" to="(1380,1940)"/>
    <wire from="(1380,1880)" to="(1460,1880)"/>
    <wire from="(1380,710)" to="(1380,1770)"/>
    <wire from="(1390,340)" to="(1390,710)"/>
    <wire from="(1390,710)" to="(1470,710)"/>
    <wire from="(140,1390)" to="(200,1390)"/>
    <wire from="(1400,130)" to="(1400,650)"/>
    <wire from="(1400,1800)" to="(1400,1820)"/>
    <wire from="(1400,1800)" to="(1780,1800)"/>
    <wire from="(1400,650)" to="(1520,650)"/>
    <wire from="(1420,1780)" to="(1780,1780)"/>
    <wire from="(1420,1820)" to="(1420,1840)"/>
    <wire from="(1420,1820)" to="(1780,1820)"/>
    <wire from="(1420,1900)" to="(1420,2090)"/>
    <wire from="(1420,1900)" to="(1490,1900)"/>
    <wire from="(1420,610)" to="(1420,1780)"/>
    <wire from="(1440,1620)" to="(1440,1630)"/>
    <wire from="(1440,1620)" to="(2150,1620)"/>
    <wire from="(1440,1840)" to="(1440,1860)"/>
    <wire from="(1440,1840)" to="(1780,1840)"/>
    <wire from="(1450,690)" to="(1450,910)"/>
    <wire from="(1450,910)" to="(1480,910)"/>
    <wire from="(1460,1860)" to="(1460,1880)"/>
    <wire from="(1460,1860)" to="(1780,1860)"/>
    <wire from="(1460,1920)" to="(1460,2250)"/>
    <wire from="(1460,1920)" to="(1530,1920)"/>
    <wire from="(1470,1170)" to="(2250,1170)"/>
    <wire from="(1470,710)" to="(1470,1170)"/>
    <wire from="(1470,710)" to="(1540,710)"/>
    <wire from="(1480,890)" to="(1480,910)"/>
    <wire from="(1480,890)" to="(1580,890)"/>
    <wire from="(1490,1880)" to="(1490,1900)"/>
    <wire from="(1490,1880)" to="(1780,1880)"/>
    <wire from="(1490,310)" to="(1530,310)"/>
    <wire from="(1490,340)" to="(1560,340)"/>
    <wire from="(1490,370)" to="(1530,370)"/>
    <wire from="(1490,400)" to="(1540,400)"/>
    <wire from="(1500,1350)" to="(1610,1350)"/>
    <wire from="(1500,1370)" to="(1500,1380)"/>
    <wire from="(1500,1370)" to="(1610,1370)"/>
    <wire from="(1500,1410)" to="(1510,1410)"/>
    <wire from="(1500,1440)" to="(1530,1440)"/>
    <wire from="(1500,1940)" to="(1500,2250)"/>
    <wire from="(1500,1940)" to="(1570,1940)"/>
    <wire from="(1500,2250)" to="(3240,2250)"/>
    <wire from="(1500,670)" to="(1500,750)"/>
    <wire from="(1500,750)" to="(2080,750)"/>
    <wire from="(1510,1390)" to="(1510,1410)"/>
    <wire from="(1510,1390)" to="(1610,1390)"/>
    <wire from="(1510,440)" to="(1560,440)"/>
    <wire from="(1520,650)" to="(1520,840)"/>
    <wire from="(1520,650)" to="(1560,650)"/>
    <wire from="(1520,840)" to="(1980,840)"/>
    <wire from="(1520,910)" to="(1520,1150)"/>
    <wire from="(1520,910)" to="(1580,910)"/>
    <wire from="(1530,1410)" to="(1530,1440)"/>
    <wire from="(1530,1410)" to="(1610,1410)"/>
    <wire from="(1530,1900)" to="(1530,1920)"/>
    <wire from="(1530,1900)" to="(1780,1900)"/>
    <wire from="(1530,1960)" to="(1530,2210)"/>
    <wire from="(1530,1960)" to="(1600,1960)"/>
    <wire from="(1530,2210)" to="(3200,2210)"/>
    <wire from="(1530,310)" to="(1530,320)"/>
    <wire from="(1530,320)" to="(1560,320)"/>
    <wire from="(1530,360)" to="(1530,370)"/>
    <wire from="(1530,360)" to="(1560,360)"/>
    <wire from="(1530,430)" to="(1530,490)"/>
    <wire from="(1530,430)" to="(1550,430)"/>
    <wire from="(1530,490)" to="(1800,490)"/>
    <wire from="(1530,870)" to="(1580,870)"/>
    <wire from="(1540,380)" to="(1540,400)"/>
    <wire from="(1540,380)" to="(1560,380)"/>
    <wire from="(1540,610)" to="(1560,610)"/>
    <wire from="(1540,670)" to="(1540,710)"/>
    <wire from="(1540,670)" to="(1560,670)"/>
    <wire from="(1550,1490)" to="(1590,1490)"/>
    <wire from="(1550,400)" to="(1550,430)"/>
    <wire from="(1550,400)" to="(1560,400)"/>
    <wire from="(1560,1430)" to="(1560,1460)"/>
    <wire from="(1560,1430)" to="(1610,1430)"/>
    <wire from="(1560,420)" to="(1560,440)"/>
    <wire from="(1570,1920)" to="(1570,1940)"/>
    <wire from="(1570,1920)" to="(1780,1920)"/>
    <wire from="(1570,1980)" to="(1570,2180)"/>
    <wire from="(1570,1980)" to="(1640,1980)"/>
    <wire from="(1570,2180)" to="(3150,2180)"/>
    <wire from="(1590,1450)" to="(1590,1490)"/>
    <wire from="(1590,1450)" to="(1610,1450)"/>
    <wire from="(1600,1940)" to="(1600,1960)"/>
    <wire from="(1600,1940)" to="(1780,1940)"/>
    <wire from="(1610,2000)" to="(1610,2140)"/>
    <wire from="(1610,2000)" to="(1720,2000)"/>
    <wire from="(1610,2140)" to="(3090,2140)"/>
    <wire from="(1640,1960)" to="(1640,1980)"/>
    <wire from="(1640,1960)" to="(1780,1960)"/>
    <wire from="(1640,2030)" to="(1640,2090)"/>
    <wire from="(1640,2090)" to="(2020,2090)"/>
    <wire from="(170,970)" to="(180,970)"/>
    <wire from="(1700,1710)" to="(1700,1760)"/>
    <wire from="(1700,1760)" to="(1700,2320)"/>
    <wire from="(1700,1760)" to="(1780,1760)"/>
    <wire from="(1700,2320)" to="(2350,2320)"/>
    <wire from="(1720,1980)" to="(1720,2000)"/>
    <wire from="(1720,1980)" to="(1780,1980)"/>
    <wire from="(1770,510)" to="(1770,560)"/>
    <wire from="(1770,560)" to="(1840,560)"/>
    <wire from="(1780,1860)" to="(1790,1860)"/>
    <wire from="(1780,1900)" to="(1790,1900)"/>
    <wire from="(1780,320)" to="(1910,320)"/>
    <wire from="(1780,340)" to="(1860,340)"/>
    <wire from="(1780,610)" to="(1960,610)"/>
    <wire from="(180,1020)" to="(490,1020)"/>
    <wire from="(180,1140)" to="(180,1190)"/>
    <wire from="(180,1140)" to="(200,1140)"/>
    <wire from="(180,1190)" to="(460,1190)"/>
    <wire from="(180,1310)" to="(190,1310)"/>
    <wire from="(180,1470)" to="(190,1470)"/>
    <wire from="(180,970)" to="(180,1020)"/>
    <wire from="(180,970)" to="(200,970)"/>
    <wire from="(1800,430)" to="(1800,490)"/>
    <wire from="(1800,430)" to="(1880,430)"/>
    <wire from="(1800,870)" to="(1930,870)"/>
    <wire from="(1800,890)" to="(1910,890)"/>
    <wire from="(1800,910)" to="(1880,910)"/>
    <wire from="(1800,930)" to="(1850,930)"/>
    <wire from="(1830,1350)" to="(2140,1350)"/>
    <wire from="(1830,1370)" to="(1870,1370)"/>
    <wire from="(1840,480)" to="(1840,530)"/>
    <wire from="(1840,480)" to="(2680,480)"/>
    <wire from="(1840,560)" to="(1840,850)"/>
    <wire from="(1840,850)" to="(2090,850)"/>
    <wire from="(1850,930)" to="(1850,940)"/>
    <wire from="(1850,940)" to="(1850,1200)"/>
    <wire from="(1850,940)" to="(2140,940)"/>
    <wire from="(1860,250)" to="(1860,340)"/>
    <wire from="(1870,1320)" to="(1870,1370)"/>
    <wire from="(1880,430)" to="(1880,910)"/>
    <wire from="(1880,910)" to="(1880,1230)"/>
    <wire from="(190,1310)" to="(190,1360)"/>
    <wire from="(190,1310)" to="(200,1310)"/>
    <wire from="(190,1360)" to="(620,1360)"/>
    <wire from="(190,1470)" to="(190,1520)"/>
    <wire from="(190,1470)" to="(200,1470)"/>
    <wire from="(190,1520)" to="(650,1520)"/>
    <wire from="(1910,320)" to="(1910,450)"/>
    <wire from="(1910,320)" to="(2010,320)"/>
    <wire from="(1910,450)" to="(1910,520)"/>
    <wire from="(1910,450)" to="(2700,450)"/>
    <wire from="(1910,520)" to="(2140,520)"/>
    <wire from="(1910,890)" to="(1910,1250)"/>
    <wire from="(1930,1280)" to="(1930,1650)"/>
    <wire from="(1930,1650)" to="(2240,1650)"/>
    <wire from="(1930,870)" to="(1930,1280)"/>
    <wire from="(1950,1060)" to="(1950,1450)"/>
    <wire from="(1950,1450)" to="(2670,1450)"/>
    <wire from="(1950,340)" to="(1950,430)"/>
    <wire from="(1950,340)" to="(2010,340)"/>
    <wire from="(1950,430)" to="(2560,430)"/>
    <wire from="(1960,610)" to="(1960,780)"/>
    <wire from="(1960,780)" to="(2190,780)"/>
    <wire from="(1960,880)" to="(1960,990)"/>
    <wire from="(1960,880)" to="(2250,880)"/>
    <wire from="(1970,360)" to="(1970,590)"/>
    <wire from="(1970,360)" to="(2010,360)"/>
    <wire from="(1980,1180)" to="(2660,1180)"/>
    <wire from="(1980,840)" to="(1980,1180)"/>
    <wire from="(1980,840)" to="(2250,840)"/>
    <wire from="(20,1080)" to="(20,1250)"/>
    <wire from="(20,1080)" to="(200,1080)"/>
    <wire from="(20,1250)" to="(20,1410)"/>
    <wire from="(20,1250)" to="(200,1250)"/>
    <wire from="(20,1410)" to="(110,1410)"/>
    <wire from="(20,50)" to="(20,910)"/>
    <wire from="(20,50)" to="(390,50)"/>
    <wire from="(20,910)" to="(20,1080)"/>
    <wire from="(20,910)" to="(200,910)"/>
    <wire from="(2000,1760)" to="(2020,1760)"/>
    <wire from="(2000,1780)" to="(2020,1780)"/>
    <wire from="(2000,1800)" to="(2060,1800)"/>
    <wire from="(2000,1820)" to="(2040,1820)"/>
    <wire from="(2000,1840)" to="(2140,1840)"/>
    <wire from="(2000,1860)" to="(2170,1860)"/>
    <wire from="(2000,1880)" to="(2080,1880)"/>
    <wire from="(2020,1720)" to="(2020,1760)"/>
    <wire from="(2020,1780)" to="(2020,2090)"/>
    <wire from="(2020,1780)" to="(2040,1780)"/>
    <wire from="(2020,560)" to="(2020,660)"/>
    <wire from="(2020,560)" to="(2140,560)"/>
    <wire from="(2020,660)" to="(2020,1720)"/>
    <wire from="(2020,660)" to="(2670,660)"/>
    <wire from="(2030,1310)" to="(2030,1390)"/>
    <wire from="(2030,1310)" to="(2560,1310)"/>
    <wire from="(2030,1390)" to="(2140,1390)"/>
    <wire from="(2040,1820)" to="(2040,2370)"/>
    <wire from="(2040,1820)" to="(2110,1820)"/>
    <wire from="(2040,580)" to="(2040,670)"/>
    <wire from="(2040,580)" to="(2140,580)"/>
    <wire from="(2040,670)" to="(2040,1780)"/>
    <wire from="(2040,670)" to="(2780,670)"/>
    <wire from="(2060,1800)" to="(2060,2170)"/>
    <wire from="(2060,600)" to="(2060,690)"/>
    <wire from="(2060,600)" to="(2140,600)"/>
    <wire from="(2060,690)" to="(2060,1800)"/>
    <wire from="(2060,690)" to="(2800,690)"/>
    <wire from="(2080,1690)" to="(2080,1880)"/>
    <wire from="(2090,850)" to="(2090,900)"/>
    <wire from="(2090,900)" to="(2250,900)"/>
    <wire from="(2100,540)" to="(2100,550)"/>
    <wire from="(2100,540)" to="(2140,540)"/>
    <wire from="(2110,620)" to="(2110,760)"/>
    <wire from="(2110,620)" to="(2140,620)"/>
    <wire from="(2110,760)" to="(2110,1820)"/>
    <wire from="(2110,760)" to="(2800,760)"/>
    <wire from="(2120,1370)" to="(2140,1370)"/>
    <wire from="(2120,800)" to="(2120,1370)"/>
    <wire from="(2140,1280)" to="(2390,1280)"/>
    <wire from="(2140,1350)" to="(2150,1350)"/>
    <wire from="(2140,1580)" to="(2140,1840)"/>
    <wire from="(2140,520)" to="(2150,520)"/>
    <wire from="(2140,860)" to="(2140,940)"/>
    <wire from="(2140,860)" to="(2250,860)"/>
    <wire from="(2140,960)" to="(2140,1280)"/>
    <wire from="(2140,960)" to="(2160,960)"/>
    <wire from="(2150,1070)" to="(3060,1070)"/>
    <wire from="(2150,1620)" to="(2150,1760)"/>
    <wire from="(2150,1760)" to="(3020,1760)"/>
    <wire from="(2150,510)" to="(2150,520)"/>
    <wire from="(2150,980)" to="(2150,1070)"/>
    <wire from="(2150,980)" to="(2180,980)"/>
    <wire from="(2160,940)" to="(2160,960)"/>
    <wire from="(2160,940)" to="(2250,940)"/>
    <wire from="(2170,1510)" to="(2170,1860)"/>
    <wire from="(2180,960)" to="(2180,980)"/>
    <wire from="(2180,960)" to="(2250,960)"/>
    <wire from="(2190,780)" to="(2190,820)"/>
    <wire from="(2190,820)" to="(2250,820)"/>
    <wire from="(2210,1580)" to="(2210,1870)"/>
    <wire from="(2210,1580)" to="(2560,1580)"/>
    <wire from="(2210,1870)" to="(2300,1870)"/>
    <wire from="(2210,920)" to="(2250,920)"/>
    <wire from="(2230,1050)" to="(2250,1050)"/>
    <wire from="(2230,320)" to="(2250,320)"/>
    <wire from="(2240,1650)" to="(2240,1890)"/>
    <wire from="(2240,1890)" to="(2240,2050)"/>
    <wire from="(2240,1890)" to="(2300,1890)"/>
    <wire from="(2240,2050)" to="(2490,2050)"/>
    <wire from="(2240,980)" to="(2240,1010)"/>
    <wire from="(2240,980)" to="(2250,980)"/>
    <wire from="(2250,1000)" to="(2250,1050)"/>
    <wire from="(2250,1170)" to="(2250,1210)"/>
    <wire from="(2250,1210)" to="(2610,1210)"/>
    <wire from="(2250,240)" to="(2250,320)"/>
    <wire from="(2350,2030)" to="(2350,2320)"/>
    <wire from="(2350,2030)" to="(2490,2030)"/>
    <wire from="(2360,1350)" to="(2390,1350)"/>
    <wire from="(2360,1370)" to="(2390,1370)"/>
    <wire from="(2360,520)" to="(2620,520)"/>
    <wire from="(2360,540)" to="(2630,540)"/>
    <wire from="(2360,560)" to="(2790,560)"/>
    <wire from="(2360,580)" to="(2650,580)"/>
    <wire from="(2360,600)" to="(2490,600)"/>
    <wire from="(2370,1600)" to="(2370,1650)"/>
    <wire from="(2370,1600)" to="(2440,1600)"/>
    <wire from="(2370,1650)" to="(2450,1650)"/>
    <wire from="(2390,1280)" to="(2390,1350)"/>
    <wire from="(2390,1370)" to="(2390,1550)"/>
    <wire from="(2400,1690)" to="(2430,1690)"/>
    <wire from="(2430,1670)" to="(2430,1690)"/>
    <wire from="(2430,1670)" to="(2450,1670)"/>
    <wire from="(2440,1130)" to="(2440,1600)"/>
    <wire from="(2460,1030)" to="(2460,1570)"/>
    <wire from="(2460,1030)" to="(2470,1030)"/>
    <wire from="(2460,820)" to="(2470,820)"/>
    <wire from="(2460,840)" to="(2470,840)"/>
    <wire from="(2460,860)" to="(2470,860)"/>
    <wire from="(2470,790)" to="(2470,820)"/>
    <wire from="(2470,790)" to="(2490,790)"/>
    <wire from="(2470,840)" to="(2580,840)"/>
    <wire from="(2470,860)" to="(2530,860)"/>
    <wire from="(2470,880)" to="(2470,1030)"/>
    <wire from="(2490,190)" to="(2490,600)"/>
    <wire from="(2520,1160)" to="(2660,1160)"/>
    <wire from="(2520,1870)" to="(2730,1870)"/>
    <wire from="(2520,1890)" to="(2730,1890)"/>
    <wire from="(2520,1910)" to="(2730,1910)"/>
    <wire from="(2520,1930)" to="(2730,1930)"/>
    <wire from="(2520,820)" to="(2520,1160)"/>
    <wire from="(2530,270)" to="(2530,860)"/>
    <wire from="(2560,1020)" to="(2560,1310)"/>
    <wire from="(2560,1020)" to="(2640,1020)"/>
    <wire from="(2560,1310)" to="(2560,1580)"/>
    <wire from="(2560,430)" to="(2560,1020)"/>
    <wire from="(2580,220)" to="(2580,840)"/>
    <wire from="(2610,1200)" to="(2610,1210)"/>
    <wire from="(2610,1200)" to="(2660,1200)"/>
    <wire from="(2620,290)" to="(2620,520)"/>
    <wire from="(2620,290)" to="(2800,290)"/>
    <wire from="(2630,420)" to="(2630,540)"/>
    <wire from="(2630,420)" to="(2810,420)"/>
    <wire from="(2640,1020)" to="(2880,1020)"/>
    <wire from="(2640,820)" to="(2640,1020)"/>
    <wire from="(2640,820)" to="(2730,820)"/>
    <wire from="(2650,430)" to="(2720,430)"/>
    <wire from="(2650,580)" to="(2650,720)"/>
    <wire from="(2650,720)" to="(2800,720)"/>
    <wire from="(2650,80)" to="(2650,430)"/>
    <wire from="(2660,1200)" to="(2670,1200)"/>
    <wire from="(2670,1450)" to="(2670,1650)"/>
    <wire from="(2670,1670)" to="(2750,1670)"/>
    <wire from="(2670,330)" to="(2670,660)"/>
    <wire from="(2670,330)" to="(2800,330)"/>
    <wire from="(2680,480)" to="(2680,940)"/>
    <wire from="(2680,940)" to="(2800,940)"/>
    <wire from="(2700,450)" to="(2700,800)"/>
    <wire from="(2700,800)" to="(2760,800)"/>
    <wire from="(2710,150)" to="(2710,310)"/>
    <wire from="(2710,1850)" to="(2710,2030)"/>
    <wire from="(2710,1850)" to="(2730,1850)"/>
    <wire from="(2710,2030)" to="(3320,2030)"/>
    <wire from="(2710,310)" to="(2800,310)"/>
    <wire from="(2720,430)" to="(2720,740)"/>
    <wire from="(2720,740)" to="(2800,740)"/>
    <wire from="(2730,820)" to="(2730,960)"/>
    <wire from="(2730,960)" to="(2800,960)"/>
    <wire from="(2740,100)" to="(2740,590)"/>
    <wire from="(2740,590)" to="(2800,590)"/>
    <wire from="(2760,800)" to="(2760,920)"/>
    <wire from="(2760,920)" to="(2800,920)"/>
    <wire from="(2780,170)" to="(2780,440)"/>
    <wire from="(2780,440)" to="(2810,440)"/>
    <wire from="(2780,460)" to="(2780,670)"/>
    <wire from="(2780,460)" to="(2810,460)"/>
    <wire from="(2790,560)" to="(2790,570)"/>
    <wire from="(2790,570)" to="(2800,570)"/>
    <wire from="(2800,610)" to="(2800,690)"/>
    <wire from="(2880,1020)" to="(2880,1160)"/>
    <wire from="(2950,1850)" to="(3320,1850)"/>
    <wire from="(30,1120)" to="(200,1120)"/>
    <wire from="(30,1120)" to="(30,1640)"/>
    <wire from="(30,1640)" to="(1230,1640)"/>
    <wire from="(3020,1000)" to="(3020,1760)"/>
    <wire from="(3020,1000)" to="(3040,1000)"/>
    <wire from="(3020,290)" to="(3240,290)"/>
    <wire from="(3020,310)" to="(3050,310)"/>
    <wire from="(3020,570)" to="(3150,570)"/>
    <wire from="(3020,590)" to="(3110,590)"/>
    <wire from="(3020,720)" to="(3090,720)"/>
    <wire from="(3020,740)" to="(3170,740)"/>
    <wire from="(3020,920)" to="(3060,920)"/>
    <wire from="(3020,940)" to="(3040,940)"/>
    <wire from="(3030,420)" to="(3200,420)"/>
    <wire from="(3030,440)" to="(3080,440)"/>
    <wire from="(3040,940)" to="(3040,1000)"/>
    <wire from="(3050,160)" to="(3050,310)"/>
    <wire from="(3060,920)" to="(3060,1070)"/>
    <wire from="(3080,70)" to="(3080,440)"/>
    <wire from="(3090,720)" to="(3090,2140)"/>
    <wire from="(3110,50)" to="(3110,590)"/>
    <wire from="(3150,570)" to="(3150,2180)"/>
    <wire from="(3170,30)" to="(3170,740)"/>
    <wire from="(3200,420)" to="(3200,2210)"/>
    <wire from="(3240,290)" to="(3240,2250)"/>
    <wire from="(3290,1930)" to="(3290,2280)"/>
    <wire from="(3290,1930)" to="(3570,1930)"/>
    <wire from="(3530,1850)" to="(3540,1850)"/>
    <wire from="(3540,1850)" to="(3620,1850)"/>
    <wire from="(3540,1870)" to="(3570,1870)"/>
    <wire from="(3540,2030)" to="(3580,2030)"/>
    <wire from="(3570,1870)" to="(3570,1930)"/>
    <wire from="(3580,2030)" to="(3590,2030)"/>
    <wire from="(390,120)" to="(390,180)"/>
    <wire from="(390,120)" to="(850,120)"/>
    <wire from="(390,50)" to="(390,120)"/>
    <wire from="(40,1100)" to="(200,1100)"/>
    <wire from="(40,1100)" to="(40,1270)"/>
    <wire from="(40,1270)" to="(200,1270)"/>
    <wire from="(40,1270)" to="(40,1430)"/>
    <wire from="(40,1430)" to="(200,1430)"/>
    <wire from="(40,320)" to="(40,930)"/>
    <wire from="(40,320)" to="(750,320)"/>
    <wire from="(40,930)" to="(200,930)"/>
    <wire from="(40,930)" to="(40,1100)"/>
    <wire from="(420,1060)" to="(480,1060)"/>
    <wire from="(420,1230)" to="(450,1230)"/>
    <wire from="(420,1390)" to="(420,2250)"/>
    <wire from="(420,2250)" to="(650,2250)"/>
    <wire from="(420,890)" to="(500,890)"/>
    <wire from="(450,1230)" to="(450,2090)"/>
    <wire from="(450,2090)" to="(650,2090)"/>
    <wire from="(460,670)" to="(460,1190)"/>
    <wire from="(460,670)" to="(900,670)"/>
    <wire from="(480,1060)" to="(480,1940)"/>
    <wire from="(480,1940)" to="(650,1940)"/>
    <wire from="(490,650)" to="(490,1020)"/>
    <wire from="(490,650)" to="(900,650)"/>
    <wire from="(50,1290)" to="(200,1290)"/>
    <wire from="(50,1290)" to="(50,1620)"/>
    <wire from="(50,1620)" to="(1210,1620)"/>
    <wire from="(500,1800)" to="(650,1800)"/>
    <wire from="(500,890)" to="(500,1800)"/>
    <wire from="(520,1550)" to="(2390,1550)"/>
    <wire from="(520,220)" to="(2580,220)"/>
    <wire from="(520,220)" to="(520,570)"/>
    <wire from="(520,570)" to="(900,570)"/>
    <wire from="(520,890)" to="(520,1550)"/>
    <wire from="(520,890)" to="(860,890)"/>
    <wire from="(550,1690)" to="(2080,1690)"/>
    <wire from="(550,610)" to="(550,1690)"/>
    <wire from="(550,610)" to="(900,610)"/>
    <wire from="(560,1570)" to="(2460,1570)"/>
    <wire from="(560,470)" to="(560,1570)"/>
    <wire from="(560,470)" to="(900,470)"/>
    <wire from="(570,1900)" to="(1340,1900)"/>
    <wire from="(570,1900)" to="(570,1960)"/>
    <wire from="(570,1960)" to="(650,1960)"/>
    <wire from="(570,1980)" to="(570,2030)"/>
    <wire from="(570,1980)" to="(650,1980)"/>
    <wire from="(570,2030)" to="(1640,2030)"/>
    <wire from="(570,2060)" to="(1310,2060)"/>
    <wire from="(570,2060)" to="(570,2110)"/>
    <wire from="(570,2110)" to="(650,2110)"/>
    <wire from="(580,1320)" to="(1870,1320)"/>
    <wire from="(580,1770)" to="(1380,1770)"/>
    <wire from="(580,1770)" to="(580,1820)"/>
    <wire from="(580,1820)" to="(650,1820)"/>
    <wire from="(580,2130)" to="(580,2170)"/>
    <wire from="(580,2130)" to="(650,2130)"/>
    <wire from="(580,2170)" to="(2060,2170)"/>
    <wire from="(580,2210)" to="(1260,2210)"/>
    <wire from="(580,2210)" to="(580,2270)"/>
    <wire from="(580,2270)" to="(650,2270)"/>
    <wire from="(580,2290)" to="(580,2370)"/>
    <wire from="(580,2290)" to="(650,2290)"/>
    <wire from="(580,2370)" to="(2040,2370)"/>
    <wire from="(580,930)" to="(580,1320)"/>
    <wire from="(580,930)" to="(870,930)"/>
    <wire from="(590,270)" to="(2530,270)"/>
    <wire from="(590,270)" to="(590,770)"/>
    <wire from="(590,770)" to="(900,770)"/>
    <wire from="(610,1630)" to="(1440,1630)"/>
    <wire from="(610,30)" to="(3170,30)"/>
    <wire from="(610,30)" to="(610,550)"/>
    <wire from="(610,550)" to="(900,550)"/>
    <wire from="(610,730)" to="(610,1630)"/>
    <wire from="(610,730)" to="(900,730)"/>
    <wire from="(620,1720)" to="(2020,1720)"/>
    <wire from="(620,1720)" to="(620,1840)"/>
    <wire from="(620,1840)" to="(650,1840)"/>
    <wire from="(620,690)" to="(620,1360)"/>
    <wire from="(620,690)" to="(900,690)"/>
    <wire from="(640,190)" to="(2490,190)"/>
    <wire from="(640,190)" to="(640,590)"/>
    <wire from="(640,590)" to="(900,590)"/>
    <wire from="(650,2290)" to="(660,2290)"/>
    <wire from="(650,710)" to="(650,1520)"/>
    <wire from="(650,710)" to="(900,710)"/>
    <wire from="(660,1750)" to="(900,1750)"/>
    <wire from="(660,50)" to="(3110,50)"/>
    <wire from="(660,50)" to="(660,530)"/>
    <wire from="(660,530)" to="(900,530)"/>
    <wire from="(660,790)" to="(660,1750)"/>
    <wire from="(660,790)" to="(900,790)"/>
    <wire from="(680,1510)" to="(2170,1510)"/>
    <wire from="(680,510)" to="(680,1510)"/>
    <wire from="(680,510)" to="(770,510)"/>
    <wire from="(690,1010)" to="(690,1280)"/>
    <wire from="(690,1010)" to="(770,1010)"/>
    <wire from="(690,1280)" to="(1930,1280)"/>
    <wire from="(70,1450)" to="(200,1450)"/>
    <wire from="(70,1450)" to="(70,1600)"/>
    <wire from="(70,1600)" to="(1190,1600)"/>
    <wire from="(710,1030)" to="(710,1250)"/>
    <wire from="(710,1030)" to="(790,1030)"/>
    <wire from="(710,1250)" to="(1290,1250)"/>
    <wire from="(720,390)" to="(750,390)"/>
    <wire from="(720,430)" to="(750,430)"/>
    <wire from="(720,950)" to="(730,950)"/>
    <wire from="(730,1050)" to="(730,1230)"/>
    <wire from="(730,1050)" to="(820,1050)"/>
    <wire from="(730,1230)" to="(1880,1230)"/>
    <wire from="(730,950)" to="(880,950)"/>
    <wire from="(730,990)" to="(740,990)"/>
    <wire from="(740,970)" to="(740,990)"/>
    <wire from="(740,970)" to="(870,970)"/>
    <wire from="(750,1420)" to="(920,1420)"/>
    <wire from="(750,320)" to="(750,390)"/>
    <wire from="(750,390)" to="(840,390)"/>
    <wire from="(750,410)" to="(750,430)"/>
    <wire from="(750,410)" to="(900,410)"/>
    <wire from="(750,810)" to="(750,1420)"/>
    <wire from="(750,810)" to="(900,810)"/>
    <wire from="(760,1070)" to="(760,1200)"/>
    <wire from="(760,1070)" to="(840,1070)"/>
    <wire from="(760,1200)" to="(1850,1200)"/>
    <wire from="(760,500)" to="(860,500)"/>
    <wire from="(760,70)" to="(3080,70)"/>
    <wire from="(760,70)" to="(760,500)"/>
    <wire from="(770,430)" to="(770,510)"/>
    <wire from="(770,430)" to="(900,430)"/>
    <wire from="(770,990)" to="(770,1010)"/>
    <wire from="(770,990)" to="(880,990)"/>
    <wire from="(780,1390)" to="(960,1390)"/>
    <wire from="(780,830)" to="(780,1390)"/>
    <wire from="(780,830)" to="(900,830)"/>
    <wire from="(790,1010)" to="(790,1030)"/>
    <wire from="(790,1010)" to="(890,1010)"/>
    <wire from="(790,160)" to="(3050,160)"/>
    <wire from="(790,160)" to="(790,490)"/>
    <wire from="(790,490)" to="(900,490)"/>
    <wire from="(810,1580)" to="(2140,1580)"/>
    <wire from="(810,750)" to="(810,1580)"/>
    <wire from="(810,750)" to="(900,750)"/>
    <wire from="(820,1030)" to="(820,1050)"/>
    <wire from="(820,1030)" to="(880,1030)"/>
    <wire from="(820,240)" to="(2250,240)"/>
    <wire from="(820,240)" to="(820,630)"/>
    <wire from="(820,630)" to="(900,630)"/>
    <wire from="(830,1360)" to="(1010,1360)"/>
    <wire from="(830,850)" to="(830,1360)"/>
    <wire from="(830,850)" to="(900,850)"/>
    <wire from="(840,1050)" to="(840,1070)"/>
    <wire from="(840,1050)" to="(890,1050)"/>
    <wire from="(840,340)" to="(840,390)"/>
    <wire from="(840,340)" to="(910,340)"/>
    <wire from="(840,390)" to="(900,390)"/>
    <wire from="(850,1170)" to="(1160,1170)"/>
    <wire from="(850,120)" to="(850,130)"/>
    <wire from="(850,130)" to="(1400,130)"/>
    <wire from="(850,130)" to="(850,370)"/>
    <wire from="(850,370)" to="(900,370)"/>
    <wire from="(850,450)" to="(850,1170)"/>
    <wire from="(850,450)" to="(900,450)"/>
    <wire from="(860,500)" to="(860,510)"/>
    <wire from="(860,510)" to="(900,510)"/>
    <wire from="(860,870)" to="(860,890)"/>
    <wire from="(860,870)" to="(900,870)"/>
    <wire from="(870,1150)" to="(1520,1150)"/>
    <wire from="(870,1800)" to="(1380,1800)"/>
    <wire from="(870,1820)" to="(900,1820)"/>
    <wire from="(870,1940)" to="(1380,1940)"/>
    <wire from="(870,1960)" to="(920,1960)"/>
    <wire from="(870,2090)" to="(1420,2090)"/>
    <wire from="(870,2110)" to="(960,2110)"/>
    <wire from="(870,2250)" to="(1460,2250)"/>
    <wire from="(870,2270)" to="(1010,2270)"/>
    <wire from="(870,910)" to="(870,930)"/>
    <wire from="(870,910)" to="(900,910)"/>
    <wire from="(870,970)" to="(870,1150)"/>
    <wire from="(870,970)" to="(890,970)"/>
    <wire from="(880,1020)" to="(880,1030)"/>
    <wire from="(880,1020)" to="(900,1020)"/>
    <wire from="(880,1070)" to="(880,1340)"/>
    <wire from="(880,1070)" to="(900,1070)"/>
    <wire from="(880,1340)" to="(1080,1340)"/>
    <wire from="(880,250)" to="(1860,250)"/>
    <wire from="(880,250)" to="(880,890)"/>
    <wire from="(880,890)" to="(900,890)"/>
    <wire from="(880,930)" to="(880,950)"/>
    <wire from="(880,930)" to="(900,930)"/>
    <wire from="(880,980)" to="(880,990)"/>
    <wire from="(880,980)" to="(900,980)"/>
    <wire from="(890,1030)" to="(890,1050)"/>
    <wire from="(890,1030)" to="(900,1030)"/>
    <wire from="(890,950)" to="(890,970)"/>
    <wire from="(890,950)" to="(900,950)"/>
    <wire from="(890,990)" to="(890,1010)"/>
    <wire from="(890,990)" to="(900,990)"/>
    <wire from="(90,180)" to="(390,180)"/>
    <wire from="(900,1010)" to="(900,1020)"/>
    <wire from="(900,1050)" to="(900,1070)"/>
    <wire from="(900,1750)" to="(900,1820)"/>
    <wire from="(900,970)" to="(900,980)"/>
    <wire from="(910,290)" to="(1280,290)"/>
    <wire from="(910,290)" to="(910,340)"/>
    <wire from="(910,340)" to="(1390,340)"/>
    <wire from="(920,1420)" to="(920,1960)"/>
    <wire from="(960,1390)" to="(960,2110)"/>
  </circuit>
  <vhdl name="debouncer">
LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY debouncer IS
  PORT (
  	clk, s_in: in std_logic;
  	s_out: out std_logic
    );
END debouncer;

--------------------------------------------------------------------------------
--Complete your VHDL description below
--------------------------------------------------------------------------------

ARCHITECTURE arch_debouncer OF debouncer IS

signal delay1, delay2, delay3: std_logic;
BEGIN
	PROCESS(clk)
	BEGIN
		IF (clk'event and clk = '1') THEN
			delay1 &lt;= s_in;
			delay2 &lt;= delay1;
			delay3 &lt;= delay2;
		END IF;
	END PROCESS;
	s_out &lt;= delay1 and delay2 and delay3;

END arch_debouncer;
</vhdl>
  <vhdl name="registru_incarcare_pin">
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY registru_incarcare_pin IS&#13;
  PORT (&#13;
 		pin_in: in std_logic_vector(3 downto 0);
 		enable, clk, reset: in std_logic;
 		pin_out: out std_logic_vector(3 downto 0)		
    );&#13;
END registru_incarcare_pin;&#13;


&#13;
ARCHITECTURE arch_registru_pin OF registru_incarcare_pin IS&#13;
&#13;
signal valoare: std_logic_vector(3 downto 0);

BEGIN&#13;
process( pin_in, clk)
begin
	if( enable = '1') then
	if( reset = '1') then
		valoare &lt;= "0000";
	elsif( clk = '1' and clk'event) then
		valoare &lt;= pin_in;
	end if;&#13;
	end if;
end process;

pin_out &lt;= valoare;
&#13;
END arch_registru_pin;&#13;
</vhdl>
  <vhdl name="registru_actualizare_bancnote">
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY registru_actualizare_bancnote IS&#13;
  PORT (&#13;
 		bancnote_in: in std_logic_vector(3 downto 0);
 		clk, reset, enable: in std_logic;
 		bancnote_out: out std_logic_vector(3 downto 0);
 		validare: in std_logic
    );&#13;
END registru_actualizare_bancnote;&#13;
&#13;

&#13;
ARCHITECTURE arch_registru_bancnote OF registru_actualizare_bancnote IS&#13;
&#13;
signal valoare: std_logic_vector(3 downto 0);
BEGIN&#13;
&#13;
process(clk, bancnote_in, enable, validare, reset)
begin
	if(enable = '1') then
	if (reset = '1') then
		valoare &lt;= "0000";
	elsif(clk = '1' and clk'event and validare= '1') then
		valoare &lt;= bancnote_in;
	end if;
	end if;
&#13;end process;

bancnote_out &lt;= valoare;
END arch_registru_bancnote;&#13;
</vhdl>
  <vhdl name="registru_suma">
LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY registru_suma IS
  PORT (
 		suma_in: in std_logic_vector(9 downto 0);
 		clk, reset: in std_logic;
 		suma_out: out std_logic_vector(9 downto 0)
    );
END registru_suma;



ARCHITECTURE arch_registru_suma OF registru_suma IS

signal valoare: std_logic_vector(9 downto 0);
BEGIN

process(clk, suma_in)
begin
	if (reset = '1') then
		valoare &lt;= "0000000000";
	elsif(clk = '1' and clk'event) then
		valoare &lt;= suma_in;
	end if;

end process;

suma_out &lt;= valoare;
END arch_registru_suma;
</vhdl>
  <vhdl name="numarator_bancnote">
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
USE ieee.std_logic_unsigned.all;
&#13;
ENTITY numarator_bancnote IS&#13;
  PORT (&#13;
 		clk, enable, reset: in std_logic;
 		numar: out std_logic_vector(3 downto 0)
 		
    );&#13;
END numarator_bancnote;&#13;
&#13;

&#13;
ARCHITECTURE arch_numarator OF numarator_bancnote IS&#13;
&#13;
signal valoare: std_logic_vector(3 downto 0);

BEGIN&#13;
&#13;
process( clk, enable, reset)

begin
	if (reset = '1') then
		valoare &lt;= "0000";
	elsif (enable = '1') then
			if (clk = '1' and clk'event) then
				if( valoare &lt; "1111") then
					valoare &lt;= valoare + "0001";
				else 
					valoare &lt;= "0000";
				end if;
			end if;
	end if;
end process;

numar &lt;= valoare;
&#13;
END arch_numarator;&#13;
</vhdl>
  <vhdl name="demux_alta_operatie">
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY demux_alta_operatie IS&#13;
  PORT (&#13;
 		enable: in std_logic;
 		sel: in std_logic;
 		alta_operatie, final: out std_logic
    );&#13;
END demux_alta_operatie;&#13;
&#13;

&#13;
ARCHITECTURE arch_demux OF demux_alta_operatie IS&#13;
&#13;
signal operatie, fin: std_logic;
BEGIN&#13;
&#13;process(enable, sel)
begin
	if(enable = '1') then
	if( sel = '1') then
		operatie &lt;= '1';
		fin &lt;= '0';
	else
		operatie &lt;= '0';
		fin &lt;= '1';
	end if;
	end if;
&#13;end process;

alta_operatie &lt;= operatie;
final &lt;= fin;

END arch_demux;&#13;
</vhdl>
  <vhdl name="demux_selectare_operatie">
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY demux_selectare_operatie IS&#13;
  PORT (&#13;
  		
  		sel: in std_logic_vector(1 downto 0);
  		enable: in std_logic;
  		validare: in std_logic;
  		enable_afisare, enable_depunere, enable_retragere, enable_schimbare: out std_logic
    );&#13;
END demux_selectare_operatie;&#13;
&#13;

&#13;
ARCHITECTURE arch_demux OF demux_selectare_operatie IS&#13;

&#13;signal enable_a, enable_d, enable_r, enable_s: std_logic;

BEGIN&#13;
&#13;process( enable, sel, validare)
begin
	if(enable = '1' and validare = '1') then
		case sel is
			when "00" =&gt; enable_a &lt;= '1';
					   enable_d &lt;= '0';
					   enable_r &lt;= '0';
					   enable_s &lt;= '0';
			when "01" =&gt; enable_a &lt;= '0';
					   enable_d &lt;= '1';
					   enable_r &lt;= '0';
					   enable_s &lt;= '0';
			when "10" =&gt; enable_a &lt;= '0';
					   enable_d &lt;= '0';
					   enable_r &lt;= '1';
					   enable_s &lt;= '0';
			when "11" =&gt; enable_a &lt;= '0';
					   enable_d &lt;= '0';
					   enable_r &lt;= '0';
					   enable_s &lt;= '1';
			when others =&gt; enable_a &lt;= '0';
					   	enable_d &lt;= '0';
					   	enable_r &lt;= '0';
					   	enable_s &lt;= '0';
		end case;
	end if;
end process;

enable_afisare &lt;= enable_a;
enable_depunere &lt;= enable_d;
enable_retragere &lt;= enable_r;
enable_schimbare &lt;= enable_s;

END arch_demux;&#13;
</vhdl>
  <vhdl name="sumator_sold">
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

ENTITY sumator_sold IS&#13;
  PORT (&#13;
 		suma_depusa: in std_logic_vector(9 downto 0);
 		validare: in std_logic;
 		suma_initiala: in std_logic_vector(9 downto 0);
 		suma_finala: out std_logic_vector(9 downto 0);
 		final_sumator: out std_logic
    );&#13;
END sumator_sold;&#13;
&#13;

&#13;
ARCHITECTURE arch_sumator OF sumator_sold IS&#13;

signal suma_depusa_in, suma_initiala_in, suma_finala_in: integer;
&#13;
BEGIN&#13;

process(suma_depusa, suma_initiala, validare)

begin
	
	if(validare = '1') then
		suma_depusa_in &lt;= conv_integer(suma_depusa);
		suma_initiala_in &lt;= conv_integer(suma_initiala);
		suma_finala_in &lt;= suma_depusa_in + suma_initiala_in;
		final_sumator &lt;= '1';
	end if;
&#13;
end process;&#13;

suma_finala &lt;= conv_std_logic_vector(suma_finala_in, 10);

END arch_sumator;&#13;
</vhdl>
  <vhdl name="scazator_sold">LIBRARY ieee;
USE ieee.std_logic_1164.all;

use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

ENTITY scazator_sold IS
  PORT (
 		suma_retrasa: in std_logic_vector(9 downto 0);
 		validare: in std_logic;
 		suma_initiala: in std_logic_vector(9 downto 0);
 		suma_finala: out std_logic_vector(9 downto 0);
 		final_scazator: out std_logic
    );
END scazator_sold;



ARCHITECTURE arch_scazator OF scazator_sold IS

signal suma_retrasa_in, suma_initiala_in, suma_finala_in: integer;

BEGIN

process(suma_retrasa, suma_initiala, validare)

begin
	
	if(validare = '1') then
		suma_retrasa_in &lt;= conv_integer(suma_retrasa);
		suma_initiala_in &lt;= conv_integer(suma_initiala);
		suma_finala_in &lt;= suma_initiala_in - suma_retrasa_in;
		final_scazator &lt;= '1';
	end if;

end process;

suma_finala &lt;= conv_std_logic_vector(suma_finala_in, 10);

END arch_scazator;
</vhdl>
  <vhdl name="comparator_suma">&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

ENTITY comparator_suma IS&#13;
  PORT (&#13;
  		suma_retragere: in std_logic_vector(9 downto 0);
  		suma_cont: in std_logic_vector(9 downto 0);
  		enable: in std_logic;
  		confirmare: out std_logic
    );&#13;
END comparator_suma;&#13;
&#13;

&#13;
ARCHITECTURE arch_comparator OF comparator_suma IS&#13;
&#13;
signal suma_retragere_int, suma_cont_int: integer;
signal confirm: std_logic;

BEGIN&#13;
&#13;process(suma_retragere, suma_cont, enable)
begin
	if( enable = '1') then
		suma_retragere_int &lt;= conv_integer(suma_retragere);
		suma_cont_int &lt;= conv_integer(suma_cont);
		if (suma_retragere &gt; suma_cont_int) then
			confirm &lt;= '0';
		else	 
			confirm &lt;= '1';
		end if;
	end if;

end process;&#13;

confirmare &lt;= confirm;
END arch_comparator;&#13;
</vhdl>
  <vhdl name="comparator_bancnote">
LIBRARY ieee;
USE ieee.std_logic_1164.all;

use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

ENTITY comparator_bancnote IS
  PORT (
  		nr_bancnote: in std_logic_vector(3 downto 0);
  		bancnote_disponibile: in std_logic_vector(3 downto 0);
  		enable: in std_logic;
  		confirmare: out std_logic
    );
END comparator_bancnote;



ARCHITECTURE arch_comparator OF comparator_bancnote IS

signal nr_bancnote_int, bancnote_disponibile_int: integer;
signal confirm: std_logic;

BEGIN

process(nr_bancnote, bancnote_disponibile, enable)
begin
	if( enable = '1') then
		 nr_bancnote_int &lt;= conv_integer(nr_bancnote);
		 bancnote_disponibile_int &lt;= conv_integer(bancnote_disponibile);
		if (nr_bancnote_int &gt; bancnote_disponibile_int) then
			confirm &lt;= '0';
		else	 
			confirm &lt;= '1';
		end if;
	end if;

end process;

confirmare &lt;= confirm;
END arch_comparator;
</vhdl>
  <vhdl name="memorie_cont">

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;


ENTITY memorie_cont IS
  PORT (
  		 pin_vechi: in std_logic_vector(3 downto 0);
		 clk: in std_logic;
		 enable_schimbare_pin, enable_adunare_sold, enable_scadere_sold, enable_transmitere_sold: in std_logic;
		 suma_adunare, suma_scadere: in std_logic_vector(9 downto 0);
		 pin_nou: in std_logic_vector(3 downto 0);
		 sold: out std_logic_vector(9 downto 0);
		 final_mem_sc, final_mem_ad, final_mem_schimbare: out std_logic;
		 validare_pin: in std_logic
 		
    );
END memorie_cont;



ARCHITECTURE arch_memorie OF memorie_cont IS

type memorie is array(15 downto 0) of std_logic_vector(13 downto 0);
signal M: memorie:= (
     "00000000001110",    	
	"00010101101110",		
	"00100010011110",
	"00110111010100",
	"01000000111010",
	"01010111100101",
	"01100101011011",
	"01110001110111",
	"10000011110110",
	"10010111000110",
	"10100000111001",
	"10110110111100",
	"11000011110100",
	"11010100000010",
	"11100101001000",
	"11110111110101"
	 ); 
BEGIN

process(validare_pin, clk, pin_vechi, enable_schimbare_pin, enable_adunare_sold, enable_scadere_sold, enable_transmitere_sold, pin_nou, suma_adunare, suma_scadere)
begin 
	if(clk = '1' and clk'event) then
		if(enable_schimbare_pin = '1' and validare_pin = '1') then
			M(conv_integer(pin_vechi))(13 downto 10) &lt;= pin_nou;
			final_mem_schimbare &lt;= '1';
		elsif (enable_adunare_sold = '1') then
				M(conv_integer(pin_vechi))(9 downto 0) &lt;= suma_adunare;
				final_mem_ad &lt;= '1';
		elsif (enable_scadere_sold = '1') then
				M(conv_integer(pin_vechi))(9 downto 0) &lt;= suma_scadere;
				final_mem_sc &lt;= '1';
		elsif (enable_transmitere_sold = '1') then
				sold &lt;= M(conv_integer(pin_vechi))(9 downto 0);
		end if;
		
					
	end if;
end process;

END arch_memorie;

</vhdl>
  <vhdl name="memorie_bancnote">
LIBRARY ieee;
USE ieee.std_logic_1164.all;

USE ieee.std_logic_unsigned.all;

ENTITY memorie_bancnote IS
  PORT (
		
		 clk: in std_logic;
		 enable_adunare, enable_scadere, enable_transmitere: in std_logic;
		 nr500_ad, nr100_ad, nr50_ad, nr10_ad: in std_logic_vector(3 downto 0);
		 nr500_sc, nr100_sc, nr50_sc, nr10_sc: in std_logic_vector(3 downto 0);
		 nr500_curent, nr100_nou, nr50_nou, nr10nou: out std_logic_vector(3 downto 0);
		 final_mem_ad,  final_mem_sc, final_tr: out std_logic
    );
END memorie_bancnote;



ARCHITECTURE arch_memorie OF memorie_bancnote IS

type memorie is array(3 downto 0) of std_logic_vector(3 downto 0);
signal M: memorie:= (
    	"1010",
    	"1010",
    	"1010",
    	"1010"
	 ); 
BEGIN

process(clk,  enable_adunare, enable_scadere, enable_transmitere)
begin 
	if( clk = '1' and clk'event) then
		if( enable_adunare = '1') then
			M(0) &lt;= nr500_ad;
			M(1) &lt;= nr100_ad;
			M(2) &lt;= nr50_ad;
			M(3) &lt;= nr10_ad;
			final_mem_ad &lt;= '1';
		elsif ( enable_scadere = '1') then
				M(0) &lt;= nr500_sc;
				M(1) &lt;= nr100_sc;
				M(2) &lt;= nr50_sc;
				M(3) &lt;= nr10_sc;
				final_mem_sc &lt;= '1';
		elsif (enable_transmitere = '1') then
				 nr500_curent &lt;= M(0);
				 nr100_nou &lt;= M(1);
				 nr50_nou &lt;= M(2);
				 nr10nou &lt;= M(3);
				 final_tr &lt;= '1';
		end if;	
		
	end if;
end process;


END arch_memorie;
</vhdl>
  <vhdl name="afisor_suma">LIBRARY ieee;
USE ieee.std_logic_1164.all;
use IEEE.STD_LOGIC_UNSIGNED.all; 

ENTITY afisor_suma IS
  PORT (
  		
		cifra1, cifra2, cifra3, cifra4: in std_logic_vector(3 downto 0);
  		clk: in std_logic;
  		anod: out std_logic_vector(3 downto 0);
  		catod: out std_logic_vector(6 downto 0);
  		final: out std_logic
    );
END afisor_suma;


ARCHITECTURE arch_afisor OF afisor_suma IS

signal numar: std_logic_vector (15 downto 0);
signal an: std_logic_vector (3 downto 0);

BEGIN

PROCESS(clk)
	BEGIN
	 	IF (clk'event and Clk='1') THEN
	 		Numar &lt;= Numar + 1;
	 	END IF; 	
END PROCESS;


PROCESS(clk, cifra1, cifra2, cifra3, cifra4)
	BEGIN
	 	IF (clk'event and clk='1') THEN
	 		  case (Numar(15 downto 14)) is
        			when "00" =&gt; An&lt;=Cifra1; Anod&lt;="1110";
        			when "01" =&gt; An&lt;=Cifra2; Anod&lt;="1101";
        			when "10" =&gt; An&lt;=Cifra3; Anod&lt;="1011";
        			when "11" =&gt; An&lt;=Cifra4; Anod&lt;="0111";
        			when others =&gt; An&lt;="1111"; Anod&lt;="0000";
    			end case;

	 	END IF; 	
END PROCESS;

PROCESS(Clk)
BEGIN
    IF (Clk'event and Clk='1') THEN
        case (An) is
                when "0001" =&gt; Catod&lt;="1111001";	  
                when "0010" =&gt; Catod&lt;="0100100";	 
                when "0011" =&gt; Catod&lt;="0110000";	  
                when "0100" =&gt; Catod&lt;="0011001";	  
                when "0101" =&gt; Catod&lt;="0010010";	  
                when "0110" =&gt; Catod&lt;="0000010";	  
                when "0111" =&gt; Catod&lt;="1111000";	  
                when "1000" =&gt; Catod&lt;="0000000";	  
                when "1001" =&gt; Catod&lt;="0010000";	  
                when "1010" =&gt; Catod&lt;="0001000";	  
                when "1011" =&gt; Catod&lt;="0000011";	  
                when "1100" =&gt; Catod&lt;="1000110";	  
                when "1101" =&gt; Catod&lt;="0100001";	  
                when "1110" =&gt; Catod&lt;="0000110";	  
                when "1111" =&gt; Catod&lt;="0001110";	  
                when others =&gt; Catod&lt;="1000000";	  
        end case;
    end if;
    final &lt;= '1';
end process;

END arch_afisor;</vhdl>
  <vhdl name="transformator_suma">&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

ENTITY transformator_suma IS&#13;
  PORT (&#13;
 		mii, sute, zeci, unitati: in std_logic_vector(3 downto 0);
 		enable: in std_logic;
 		suma: out std_logic_vector(9 downto 0);
 		final_trans_suma: out std_logic;
 		validare: in std_logic
 		
    );&#13;
END transformator_suma;&#13;
&#13;

&#13;
ARCHITECTURE arch_transformator OF transformator_suma IS&#13;
&#13;
signal suma_in, mii_in, sute_in, zeci_in, unitati_in: integer :=0;
BEGIN&#13;
&#13;process(enable, mii, sute, zeci, unitati, validare)
begin

	if( enable = '1' and validare = '1') then
		mii_in &lt;= conv_integer(mii);
		sute_in &lt;= conv_integer(sute);
		zeci_in &lt;= conv_integer(zeci);
		unitati_in &lt;= conv_integer(unitati);
		suma_in &lt;= mii_in*1000 + sute_in*100 +zeci_in*10 +unitati_in;
		final_trans_suma &lt;= '1';
		
	end if;
&#13;end process;

suma &lt;= conv_std_logic_vector(suma_in, 10);


END arch_transformator;&#13;
</vhdl>
  <vhdl name="uc">
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY uc IS&#13;
  PORT (&#13;
 		clk, reset, start: in std_logic;
 		final_mem_banc_sc, enable_alta_op, final_schimbare, final_sc_banc500, final_sc_banc100, final_sc_banc50, final_sc_banc10, fin_mem_sc, confirm_algoritm, final_transmitere, confirm_comparator, final_numarare500, final_numarare100, final_numarare50, final_numarare10: in std_logic; 
 		final_scazator_sold, final_mem_banc_ad, final_mem_ad, final_sumator_banc500, final_sumator_banc100, final_sumator_banc50, final_sumator_banc10: in std_logic;
 		final_sumator_sold, final_trans_suma_sc, final_trans_suma_ad, validare_pin, finalizare_sel_op, enable_afisare, enable_depunere, enable_retragere, enable_schimbare, finalizare_afisare: in std_logic;
 		led_final, enable_demux_alta_op, enable_scadere_banc, enable_scazator500, enable_scazator100, enable_scazator50, enable_scazator10, enable_scadere_sold, enable_scazator, enable_algoritm, enable_transmitere, enable_comparator,enable_adunare_banc, enable_pin, enable_suma, enable_adunare_sold, enable_operatie, enable_sum500, enable_sum100, enable_sum50, enable_sum10: out std_logic;
 		enable_nr500, enable_nr100, enable_nr50, enable_nr10: out std_logic
    );&#13;
END uc;&#13;
&#13;

&#13;
ARCHITECTURE arch_uc OF uc IS&#13;
&#13;
type stari is (asteapta, introducere_pin, alegere_operatie, afisare_sold, urmatoarea_operatie, depunere_numerar, depunere_bancnote, retragere_numerar, eliberare_bancnote, schimbare_pin, finalizare);
signal stare, nxt_stare: stari;

BEGIN&#13;
&#13;
actualizare_stare: process(reset, clk)

	begin
		if(reset = '1') then
			stare&lt;= asteapta;
		elsif clk'event and clk = '1' then
			stare &lt;= nxt_stare; 
		end if;
	end process;
&#13;
tranzitii: process(stare, clk, reset, start,final_mem_banc_sc, enable_alta_op, final_schimbare, final_sc_banc500, final_sc_banc100, final_sc_banc50, final_sc_banc10, fin_mem_sc, confirm_algoritm, final_transmitere, confirm_comparator, final_numarare500, final_numarare100, final_numarare50, final_numarare10 ,final_scazator_sold, final_mem_banc_ad, final_mem_ad, final_sumator_banc500, final_sumator_banc100, final_sumator_banc50, final_sumator_banc10,final_sumator_sold, final_trans_suma_sc, final_trans_suma_ad, validare_pin, finalizare_sel_op, enable_afisare, enable_depunere, enable_retragere, enable_schimbare, finalizare_afisare)

	begin		

	case stare is
	
		when asteapta =&gt;
			led_final &lt;= '0';
			enable_demux_alta_op &lt;= '0';
			enable_scadere_banc &lt;= '0';
			enable_scazator500 &lt;= '0';
			enable_scazator100 &lt;= '0';
			enable_scazator50 &lt;= '0';
			enable_scazator10 &lt;= '0';
			enable_scadere_sold &lt;= '0';
			enable_scazator &lt;= '0';
			enable_algoritm &lt;= '0';
			enable_transmitere &lt;= '0';
			enable_comparator &lt;= '0';
			enable_adunare_banc &lt;= '0';
			enable_pin &lt;= '0';
			enable_suma &lt;= '0';
			enable_adunare_sold &lt;= '0';
			enable_operatie &lt;= '0';
			enable_sum500 &lt;= '0';
			enable_sum100 &lt;= '0';
			enable_sum50 &lt;= '0';
			enable_sum10 &lt;= '0';
			enable_nr500 &lt;= '0';
			enable_nr100 &lt;= '0';
			enable_nr50 &lt;= '0';
			enable_nr10 &lt;= '0';
			if (start = '1') then
				enable_pin &lt;= '1';
				nxt_stare &lt;= introducere_pin;
			else
				nxt_stare &lt;= asteapta;
			end if;

		when introducere_pin =&gt;
			if (validare_pin = '1') then
				enable_operatie &lt;= '1';
				nxt_stare &lt;= alegere_operatie;
			else 
				nxt_stare &lt;= introducere_pin;
			end if;
			
		when alegere_operatie =&gt;
			if (finalizare_sel_op = '1') then
				if (enable_afisare = '1' ) then
					nxt_stare &lt;=afisare_sold;
				
				elsif (enable_depunere = '1' ) then
					nxt_stare &lt;=depunere_numerar;
				
				elsif (enable_retragere = '1' ) then
					nxt_stare &lt;=retragere_numerar;
				
				elsif ( enable_schimbare = '1' ) then
					nxt_stare &lt;=schimbare_pin;
	 
				 else
				     nxt_stare &lt;=alegere_operatie;
				  end if;
			end if;

		when afisare_sold =&gt;
			if (finalizare_afisare = '1') then
				enable_demux_alta_op &lt;= '1';
				nxt_stare &lt;= urmatoarea_operatie;
			else nxt_stare &lt;= afisare_sold;
			end if;
			
		when depunere_numerar =&gt;
			if(final_trans_suma_ad = '1') then
				enable_suma &lt;= '1';
				if ( final_sumator_sold = '1') then
					enable_adunare_sold &lt;= '1';
					if (final_mem_ad = '1') then
						enable_nr500 &lt;= '1';
						enable_nr100 &lt;= '1';
						enable_nr50 &lt;= '1';
						enable_nr10 &lt;= '1';
						nxt_stare &lt;= depunere_bancnote;
					else 
						nxt_stare &lt;=depunere_numerar;
					end if;
				end if;
			end if;
				

		when depunere_bancnote =&gt;
			if(final_numarare500 = '1') then
				enable_sum500 &lt;= '1';
			end if;

			if(final_numarare100 = '1') then
				enable_sum100 &lt;= '1';
			end if;

			if(final_numarare50 = '1') then
				enable_sum50 &lt;= '1';
			end if;

			if(final_numarare10 = '1') then
				enable_sum10 &lt;= '1';
			end if;
			
			if (final_sumator_banc500 = '1' and final_sumator_banc100 = '1' and final_sumator_banc50 = '1' and final_sumator_banc10 = '1') then
					enable_adunare_banc &lt;= '1';
			end if;
			
			if(final_mem_banc_ad = '1') then
				enable_demux_alta_op &lt;= '1';
				nxt_stare &lt;= urmatoarea_operatie;
			else nxt_stare &lt;= depunere_bancnote;
			end if;

		when retragere_numerar =&gt;
			if(final_trans_suma_sc = '1' ) then
				enable_comparator &lt;= '1';
				if( confirm_comparator = '1') then
					enable_transmitere &lt;= '1';
	    					if( final_transmitere = '1') then
	    						enable_algoritm &lt;= '1';
	    						if (confirm_algoritm = '1') then
	    							nxt_stare &lt;= eliberare_bancnote;
	    								else nxt_stare &lt;= retragere_numerar;
							end if;
						end if;
				end if;
			end if;


							
		
	    when eliberare_bancnote =&gt;
	    		enable_scazator &lt;= '1';
				if( final_scazator_sold = '1') then
					enable_scadere_sold &lt;= '1';
						if( fin_mem_sc = '1') then
							enable_scazator500 &lt;= '1';
							enable_scazator100 &lt;= '1';
							enable_scazator50 &lt;= '1';
							enable_scazator10 &lt;= '1';
							if (final_sc_banc500 = '1' and final_sc_banc100 = '1' and final_sc_banc50 = '1' and final_sc_banc10 = '1') then
									enable_scadere_banc &lt;= '1';
									if(final_mem_banc_sc = '1') then
										enable_demux_alta_op &lt;= '1';
										nxt_stare &lt;= urmatoarea_operatie;
									else nxt_stare &lt;= eliberare_bancnote;
									end if;
							end if;
						end if;
				end if;
							
									
	    	when schimbare_pin =&gt;
	    		if (final_schimbare = '1') then
	    			enable_demux_alta_op &lt;= '1';
	    			nxt_stare &lt;= urmatoarea_operatie;
	    			
	    		end if;
	    			
		when urmatoarea_operatie =&gt;
			if ( enable_alta_op = '1') then
				nxt_stare &lt;= asteapta;
			else 
				nxt_stare &lt;= finalizare;
			end if;

		when finalizare =&gt;
			led_final &lt;= '1';
			
	end case;				
	end process;
	
END arch_uc;&#13;
</vhdl>
  <vhdl name="algoritm_bancnote">
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

&#13;
ENTITY algoritm_bancnote IS&#13;
  PORT (&#13;
  		suma: in std_logic_vector(9 downto 0);
  		enable: in std_logic;
  		b500_in, b100_in, b50_in, b10_in: in std_logic_vector(3 downto 0);
  		b500_out, b100_out, b50_out, b10_out: out std_logic_vector(3 downto 0);
  		confirm: out std_logic
    );&#13;
END algoritm_bancnote;&#13;
&#13;

&#13;
ARCHITECTURE arch_algoritm OF algoritm_bancnote IS&#13;
&#13;
signal b500_int, b100_int, b50_int, b10_int, b500_outt, b100_outt, b50_outt, b10_outt, suma_int, total: integer:=0;
signal confirmare: std_logic;
BEGIN&#13;
process( suma, enable, b500_in, b100_in, b50_in, b10_in)
begin
	suma_int &lt;= conv_integer(suma);
	b500_int &lt;= conv_integer(b500_in);
	b100_int &lt;= conv_integer(b100_in);
	b50_int &lt;= conv_integer(b50_in);
	b10_int &lt;= conv_integer(b10_in);
	total &lt;= 10;
	while (suma_int &gt; 0 and total &gt; 0) loop
		if ( b500_int &gt; 0 and suma_int-500 &gt; -1) then
			b500_outt &lt;= b500_outt + 1;
			suma_int &lt;= suma_int - 500;
		elsif ( b100_int &gt; 0 and suma_int-100 &gt; -1) then
			b100_outt &lt;= b100_outt + 1;
			suma_int &lt;= suma_int - 100;
		elsif ( b50_int &gt; 0 and suma_int-50 &gt; -1) then
			b50_outt &lt;= b50_outt + 1;
			suma_int &lt;= suma_int - 50;
		elsif ( b10_int &gt; 0 and suma_int-10 &gt; -1) then
			b10_outt &lt;= b10_outt + 1;
			suma_int &lt;= suma_int - 10;	
		end if;
		total &lt;= total - 1;
	end loop;
	if (total = 0) then
		confirmare &lt;= '0';
	else 
		confirmare &lt;= '1';
	end if;
	
		
end process;
&#13;
b500_out &lt;= conv_std_logic_vector(b500_outt, 4);
b100_out &lt;= conv_std_logic_vector(b100_outt, 4);
b50_out &lt;= conv_std_logic_vector(b50_outt, 4);
b10_out &lt;= conv_std_logic_vector(b10_outt, 4);
confirm &lt;= confirmare;

END arch_algoritm;&#13;
</vhdl>
  <vhdl name="transformator_cifre">
LIBRARY ieee;
USE ieee.std_logic_1164.all;

use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

ENTITY transformator_cifre IS
  PORT (
 		
 		suma: in std_logic_vector(9 downto 0);
 		enable: in std_logic;
 		mii, sute, zeci, unitati: out std_logic_vector(3 downto 0)
 		
    );
END transformator_cifre;



ARCHITECTURE arch_transformator OF transformator_cifre IS

signal suma_in, mii_in, sute_in, zeci_in, unitati_in: integer :=0;
BEGIN

process(enable, suma)
begin

	if( enable = '1') then
		suma_in &lt;= conv_integer(suma);
		mii_in &lt;= suma_in/1000;
		sute_in &lt;= (suma_in/100) mod 10;
		zeci_in &lt;= (suma_in/10) mod 10;
		unitati_in &lt;= suma_in mod 10;
		
	end if;

end process;

mii &lt;= conv_std_logic_vector(mii_in, 4);
sute &lt;= conv_std_logic_vector(sute_in, 4);
zeci &lt;= conv_std_logic_vector(zeci_in, 4);
unitati &lt;= conv_std_logic_vector(unitati_in, 4);

END arch_transformator;

</vhdl>
  <vhdl name="sumator_bancnote">

LIBRARY ieee;
USE ieee.std_logic_1164.all;

use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

ENTITY sumator_bancnote IS
  PORT (
 		bancnote_depuse: in std_logic_vector(3 downto 0);
 		validare: in std_logic;
 		bancnote_initiale: in std_logic_vector(3 downto 0);
 		bancnote_finale: out std_logic_vector(3 downto 0);
 		final: out std_logic
    );
END sumator_bancnote;



ARCHITECTURE arch_sumator OF sumator_bancnote IS

signal bancnote_depuse_in, bancnote_initiale_in, bancnote_finale_in: integer;

BEGIN

process(bancnote_depuse, bancnote_initiale, validare)

begin
	
	if(validare = '1') then
		bancnote_depuse_in &lt;= conv_integer(bancnote_depuse);
		bancnote_initiale_in &lt;= conv_integer(bancnote_initiale);
		bancnote_finale_in &lt;= bancnote_depuse_in + bancnote_initiale_in;
		final &lt;= '1';
	end if;

end process;

bancnote_finale &lt;= conv_std_logic_vector(bancnote_finale_in, 4);

END arch_sumator;
</vhdl>
  <vhdl name="scazator_bancnote">

LIBRARY ieee;
USE ieee.std_logic_1164.all;

use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

ENTITY scazator_bancnote IS
  PORT (
 		bancnote_retrase: in std_logic_vector(3 downto 0);
 		validare: in std_logic;
 		bancnote_initiale: in std_logic_vector(3 downto 0);
 		bancnote_finale: out std_logic_vector(3 downto 0);
 		final: out std_logic
    );
END scazator_bancnote;



ARCHITECTURE arch_scazator OF scazator_bancnote IS

signal bancnote_retrase_in, bancnote_initiale_in, bancnote_finale_in: integer;

BEGIN

process(bancnote_retrase, bancnote_initiale, validare)

begin
	
	if(validare = '1') then
		bancnote_retrase_in &lt;= conv_integer(bancnote_retrase);
		bancnote_initiale_in &lt;= conv_integer(bancnote_initiale);
		bancnote_finale_in &lt;= bancnote_initiale_in - bancnote_retrase_in;
		final &lt;= '1';
	end if;

end process;

bancnote_finale &lt;= conv_std_logic_vector(bancnote_finale_in, 4);

END arch_scazator;
</vhdl>
  <vhdl name="decodificator_afisor">

LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY decodificator_afisor IS
  PORT (
 	cifra: in std_logic_vector(3 downto 0);
  	afis: out std_logic_vector(6 downto 0);
  	final: out std_logic
    );
END decodificator_afisor;



ARCHITECTURE arch_decod OF decodificator_afisor IS

BEGIN
process(cifra)
	begin
	case cifra is
	when "0000" =&gt; afis &lt;= "1111110";
	when "0001" =&gt; afis &lt;= "0110000";
	when "0010" =&gt; afis &lt;= "1101101";
	when "0011" =&gt; afis &lt;= "1111001";
	when "0100" =&gt; afis &lt;= "0110011";
	when "0101" =&gt; afis &lt;= "1011011";
	when "0110" =&gt; afis &lt;= "1111101";
	when "0111" =&gt; afis &lt;= "1110000";
	when "1000" =&gt; afis &lt;= "1111111";
	when "1001" =&gt; afis &lt;= "1111011";
	when others =&gt; afis &lt;= "0000000";
end case;
final &lt;= '1';
end process;
end arch_decod;</vhdl>
  <vhdl name="numarator_afisor">

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;
USE ieee.std_logic_arith.all;

ENTITY numarator_afisor IS
  PORT (
		clk, enable :in std_logic;
	   	numar: out std_logic_vector(1 downto 0)
    );
END numarator_afisor;



ARCHITECTURE arch_numarator OF numarator_afisor IS

BEGIN
process(clk, enable)
variable count: std_logic_vector(15 downto 0) := "0000000000000000";
begin
	if(enable = '1') then
		if(clk = '1') then
			count := count + 1;
		end if;
		if(count = "1111111111111111") then
		 count := "0000000000000000";
		end if;
	end if;
	numar &lt;= count(15 downto 14);
end process;
end arch_numarator;</vhdl>
  <vhdl name="mux_anod">

LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY mux_anod IS
  PORT (
	   sel : in std_logic_vector(1 downto 0);
  	   anod: out std_logic_vector(3 downto 0)
    );
END mux_anod;



ARCHITECTURE arch_mux OF mux_anod IS

BEGIN
process(sel)
begin
	if( sel = "00") then
		anod &lt;= "1110";
	elsif (sel = "01") then
			anod &lt;= "1101";
		elsif (sel = "10") then
				anod &lt;= "1011";
				elsif (sel = "11") then
					anod &lt;= "0111";
				end if; 
end process;
END arch_mux;
</vhdl>
  <vhdl name="mux_afisor">

LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY mux_afisor IS
  PORT (
	   sel : in std_logic_vector(1 downto 0);
  	   c1, c2, c3, c4: in std_logic_vector(3 downto 0);
  	   catod: out std_logic_vector(3 downto 0)
    );
END mux_afisor;



ARCHITECTURE arch_mux OF mux_afisor IS

BEGIN
process(sel, c1, c2, c3, c4)
begin
 	if( sel = "00") then
		catod &lt;= c1;
	elsif (sel = "01") then
			catod &lt;= c2;
		elsif (sel = "10") then
				catod &lt;= c3;
				elsif (sel = "11") then
					catod &lt;= c4;
				end if; 

end process;
END arch_mux;</vhdl>
  <vhdl name="div_frecventa">LIBRARY ieee;
USE ieee.std_logic_1164.all;

USE ieee.std_logic_unsigned.all;

ENTITY div_frecventa IS
  PORT (
  CLK_100: IN std_logic;
  RESET: IN std_logic;
  CLK_1: OUT std_logic
    );
END div_frecventa;



ARCHITECTURE TypeArchitecture OF div_frecventa IS

Component counter
 PORT(
 CLK: IN std_logic;
 RESET: IN std_logic;
 COUT: OUT std_logic
 );
 END component;
 Component tflipflop
PORT(
T,CLK: IN std_logic;
Q: OUT std_logic
);
end component;
signal N1: std_logic;
BEGIN
C1: counter port map(CLK_100,RESET,N1);
C2: tflipflop port map('1',N1,CLK_1);
END TypeArchitecture;


LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY counter is
 PORT(
 CLK: IN std_logic;
 RESET: IN std_logic;
 COUT: OUT std_logic
 );
 END counter;

 ARCHITECTURE behavioural OF counter IS
 BEGIN
 process(CLK)
 variable COUNT: std_logic_vector(25 downto 0):=(others=&gt;'0');
 begin
 if rising_edge(CLK) then
 if RESET='1'then 
 count:=(others=&gt;'0');
else
	count:=count+1;
end if;
end if;
if count="10111110101111000010000000" then
COUT &lt;= '1';
count:=(others=&gt;'0');
else COUT &lt;='0';
end if;
end process;
end behavioural;


LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

Entity tflipflop is
PORT(
T,CLK: IN std_logic;
Q: OUT std_logic

);
end tflipflop;

ARCHITECTURE behave of tflipflop is
BEGIN
PROCESS(CLK)
variable Qv: std_logic:='0';
begin
if rising_edge(CLK) then
if T='0' then
Qv:=Qv;
else
Qv:=NOT Qv;
end if;
end if;
Q&lt;=Qv;
end process;
end behave;</vhdl>
</project>
